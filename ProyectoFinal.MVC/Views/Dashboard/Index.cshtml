@{
    ViewBag.Title = "Dashboard - Sistema de Cola de Tareas";
    var summary = ViewBag.Summary as ProyectoFinal.Business.Models.TaskDashboardSummary;
    var recentTasks = ViewBag.RecentTasks as IEnumerable<ProyectoFinal.Data.Task> ?? new List<ProyectoFinal.Data.Task>();
    var pendingTasks = ViewBag.PendingTasks as IEnumerable<ProyectoFinal.Data.Task> ?? new List<ProyectoFinal.Data.Task>();
    var failedTasks = ViewBag.FailedTasks as IEnumerable<ProyectoFinal.Data.Task> ?? new List<ProyectoFinal.Data.Task>();
}

<div class="space-y-6">
    <!-- Header -->
    <div class="border-b border-gray-200 pb-4">
        <h1 class="text-3xl font-bold text-gray-900">Dashboard</h1>
        <p class="mt-2 text-sm text-gray-600">Vista general del sistema de cola de tareas</p>
    </div>

    <!-- Summary Cards -->
    @if (summary != null)
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <!-- Total Tasks -->
            <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="p-5">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center">
                                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                                </svg>
                            </div>
                        </div>
                        <div class="ml-5 w-0 flex-1">
                            <dl>
                                <dt class="text-sm font-medium text-gray-500 truncate">Total Tareas</dt>
                                <dd class="text-2xl font-semibold text-gray-900">@summary.TotalTasks</dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Pending Tasks -->
            <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="p-5">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 bg-yellow-500 rounded-md flex items-center justify-center">
                                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                        </div>
                        <div class="ml-5 w-0 flex-1">
                            <dl>
                                <dt class="text-sm font-medium text-gray-500 truncate">Pendientes</dt>
                                <dd class="text-2xl font-semibold text-gray-900">@summary.PendingTasks</dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>

            <!-- In Progress Tasks -->
            <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="p-5">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center">
                                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                                </svg>
                            </div>
                        </div>
                        <div class="ml-5 w-0 flex-1">
                            <dl>
                                <dt class="text-sm font-medium text-gray-500 truncate">En Proceso</dt>
                                <dd class="text-2xl font-semibold text-gray-900">@summary.InProgressTasks</dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Completed Tasks -->
            <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="p-5">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 bg-green-500 rounded-md flex items-center justify-center">
                                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                        </div>
                        <div class="ml-5 w-0 flex-1">
                            <dl>
                                <dt class="text-sm font-medium text-gray-500 truncate">Completadas</dt>
                                <dd class="text-2xl font-semibold text-gray-900">@summary.CompletedTasks</dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Pending Tasks -->
        <div class="bg-white shadow rounded-lg">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Tareas Pendientes</h3>
            </div>
            <div class="p-6">
                @if (pendingTasks.Any())
                {
                    <div class="overflow-hidden">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Título</th>
                                    <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Prioridad</th>
                                    <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha Programada</th>
                                    <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @foreach (var task in pendingTasks.Take(5))
                                {
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-3 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                            <div class="truncate max-w-32" title="@task.Title">@task.Title</div>
                                        </td>
                                        <td class="px-3 py-4 whitespace-nowrap">
                                            <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @(task.Priority == "Alta" ? "bg-red-100 text-red-800" : task.Priority == "Media" ? "bg-yellow-100 text-yellow-800" : "bg-gray-100 text-gray-800")">
                                                @task.Priority
                                            </span>
                                        </td>
                                        <td class="px-3 py-4 whitespace-nowrap text-sm text-gray-500">
                                            <div class="font-mono text-xs">@task.ScheduledDate.ToString("dd/MM/yyyy")</div>
                                            <div class="font-mono text-xs text-gray-400">@task.ScheduledDate.ToString("HH:mm")</div>
                                        </td>
                                        <td class="px-3 py-4 whitespace-nowrap text-sm font-medium">
                                            <a href="@Url.Action("Details", "Tasks", new { id = task.TaskId })" class="text-primary-600 hover:text-primary-900 transition-colors">Ver</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    @(pendingTasks.Count() > 5 ? Html.Raw("<div class=\"mt-4 text-center\"><a href=\"" + Url.Action("Index", "Tasks") + "\" class=\"text-sm text-primary-600 hover:text-primary-900 transition-colors\">Ver todas las tareas pendientes (" + pendingTasks.Count() + ")</a></div>") : Html.Raw(""))
                }
                else
                {
                    <div class="text-center py-8">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                        <p class="mt-2 text-sm text-gray-500">No hay tareas pendientes</p>
                    </div>
                }
            </div>
        </div>

        <!-- Failed Tasks -->
        <div class="bg-white shadow rounded-lg">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Tareas Fallidas</h3>
            </div>
            <div class="p-6">
                @if (failedTasks.Any())
                {
                    <div class="overflow-hidden">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Título</th>
                                    <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Prioridad</th>
                                    <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha Programada</th>
                                    <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @foreach (var task in failedTasks.Take(5))
                                {
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-3 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                            <div class="truncate max-w-32" title="@task.Title">@task.Title</div>
                                        </td>
                                        <td class="px-3 py-4 whitespace-nowrap">
                                            <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @(task.Priority == "Alta" ? "bg-red-100 text-red-800" : task.Priority == "Media" ? "bg-yellow-100 text-yellow-800" : "bg-gray-100 text-gray-800")">
                                                @task.Priority
                                            </span>
                                        </td>
                                        <td class="px-3 py-4 whitespace-nowrap text-sm text-gray-500">
                                            <div class="font-mono text-xs">@task.ScheduledDate.ToString("dd/MM/yyyy")</div>
                                            <div class="font-mono text-xs text-gray-400">@task.ScheduledDate.ToString("HH:mm")</div>
                                        </td>
                                        <td class="px-3 py-4 whitespace-nowrap text-sm font-medium">
                                            <div class="flex space-x-2">
                                                <a href="@Url.Action("Details", "Tasks", new { id = task.TaskId })" class="text-primary-600 hover:text-primary-900 transition-colors">Ver</a>
                                                <button class="text-yellow-600 hover:text-yellow-900 transition-colors retry-task" data-task-id="@task.TaskId">Reintentar</button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    @(failedTasks.Count() > 5 ? Html.Raw("<div class=\"mt-4 text-center\"><a href=\"" + Url.Action("Index", "Tasks") + "\" class=\"text-sm text-primary-600 hover:text-primary-900 transition-colors\">Ver todas las tareas fallidas (" + failedTasks.Count() + ")</a></div>") : Html.Raw(""))
                }
                else
                {
                    <div class="text-center py-8">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                        <p class="mt-2 text-sm text-gray-500">No hay tareas fallidas</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Recent Tasks -->
    <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Tareas Recientes</h3>
        </div>
        <div class="p-6">
            @if (recentTasks.Any())
            {
                <div class="overflow-hidden">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Título</th>
                                <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Descripción</th>
                                <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Prioridad</th>
                                <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                                <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha Creación</th>
                                <th class="px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var task in recentTasks.Take(10))
                            {
                                <tr class="hover:bg-gray-50">
                                    <td class="px-3 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                        <div class="truncate max-w-32" title="@task.Title">@task.Title</div>
                                    </td>
                                    <td class="px-3 py-4 text-sm text-gray-500">
                                        <div class="max-w-xs">
                                            @if (!string.IsNullOrEmpty(task.Description))
                                            {
                                                if (task.Description.Length > 40)
                                                {
                                                    <div class="truncate" title="@task.Description">@task.Description.Substring(0, 40)...</div>
                                                }
                                                else
                                                {
                                                    <div>@task.Description</div>
                                                }
                                            }
                                            else
                                            {
                                                <span class="text-gray-400">Sin descripción</span>
                                            }
                                        </div>
                                    </td>
                                    <td class="px-3 py-4 whitespace-nowrap">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @(task.Priority == "Alta" ? "bg-red-100 text-red-800" : task.Priority == "Media" ? "bg-yellow-100 text-yellow-800" : "bg-gray-100 text-gray-800")">
                                            @task.Priority
                                        </span>
                                    </td>
                                    <td class="px-3 py-4 whitespace-nowrap">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @(task.Status == "Pendiente" ? "bg-yellow-100 text-yellow-800" : task.Status == "En Proceso" ? "bg-blue-100 text-blue-800" : task.Status == "Finalizada" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                            @task.Status
                                        </span>
                                    </td>
                                    <td class="px-3 py-4 whitespace-nowrap text-sm text-gray-500">
                                        @if (task.CreatedAt.HasValue)
                                        {
                                            <div class="font-mono text-xs">@task.CreatedAt.Value.ToString("dd/MM/yyyy")</div>
                                            <div class="font-mono text-xs text-gray-400">@task.CreatedAt.Value.ToString("HH:mm")</div>
                                        }
                                        else
                                        {
                                            <span class="text-gray-400">N/A</span>
                                        }
                                    </td>
                                    <td class="px-3 py-4 whitespace-nowrap text-sm font-medium">
                                        <a href="@Url.Action("Details", "Tasks", new { id = task.TaskId })" class="text-primary-600 hover:text-primary-900 transition-colors">Ver</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @(recentTasks.Count() > 10 ? Html.Raw("<div class=\"mt-4 text-center\"><a href=\"" + Url.Action("Index", "Tasks") + "\" class=\"text-sm text-primary-600 hover:text-primary-900 transition-colors\">Ver todas las tareas (" + recentTasks.Count() + ")</a></div>") : Html.Raw(""))
            }
            else
            {
                <div class="text-center py-8">
                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                    </svg>
                    <p class="mt-2 text-sm text-gray-500">No hay tareas recientes</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        $(document).ready(function () {
            // Reintenta tareas fallidas desde el dashboard
            $('.retry-task').click(function () {
                var taskId = $(this).data('task-id');
                var button = $(this);

                // Mostrar confirmación con SweetAlert2
                Swal.fire({
                    title: '¿Reintentar tarea?',
                    text: '¿Estás seguro de que deseas reintentar esta tarea fallida?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, reintentar',
                    cancelButtonText: 'Cancelar',
                    confirmButtonColor: '#F59E0B',
                    cancelButtonColor: '#6B7280'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Deshabilitar botón durante la operación
                        button.prop('disabled', true);
                        button.text('Reintentando...');
                        
                        $.ajax({
                            url: '@Url.Action("Retry", "Tasks")',
                            type: 'POST',
                            data: { id: taskId },
                            dataType: 'json',
                            success: function (response) {
                                console.log('Respuesta recibida:', response);
                                if (response && response.success === true) {
                                    Swal.fire({
                                        title: '¡Éxito!',
                                        text: 'Tarea agregada a la cola para reintento exitosamente',
                                        icon: 'success',
                                        confirmButtonText: 'Aceptar',
                                        confirmButtonColor: '#10B981',
                                        timer: 2000,
                                        timerProgressBar: true
                                    }).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    var errorMessage = (response && response.message) ? response.message : 'Error desconocido';
                                    Swal.fire({
                                        title: 'Error',
                                        text: 'Error: ' + errorMessage,
                                        icon: 'error',
                                        confirmButtonText: 'Aceptar',
                                        confirmButtonColor: '#EF4444'
                                    });
                                    // Restaurar botón
                                    button.prop('disabled', false);
                                    button.text('Reintentar');
                                }
                            },
                            error: function (xhr, status, error) {
                                console.log('Error AJAX:', xhr.responseText);
                                console.log('Status:', status);
                                console.log('Error:', error);
                                Swal.fire({
                                    title: 'Error',
                                    text: 'Error al procesar la solicitud: ' + error,
                                    icon: 'error',
                                    confirmButtonText: 'Aceptar',
                                    confirmButtonColor: '#EF4444'
                                });
                                // Restaurar botón
                                button.prop('disabled', false);
                                button.text('Reintentar');
                            }
                        });
                    }
                });
            });
        });
    </script>
}
