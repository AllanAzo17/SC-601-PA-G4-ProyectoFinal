@model IEnumerable<ProyectoFinal.Data.Task>

@{
    ViewBag.Title = "Gestión de Tareas";
}

<div class="space-y-6">
    <!-- Hidden antiforgery token for AJAX calls -->
    @Html.AntiForgeryToken()
    
    <!-- Header -->
    <div class="border-b border-gray-200 pb-4">
        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">Gestión de Tareas</h1>
                <p class="mt-2 text-sm text-gray-600">Sistema simple de gestión de tareas</p>
            </div>
            <div class="mt-4 sm:mt-0 flex flex-col sm:flex-row gap-3">
                <a href="@Url.Action("Create", "Tasks")" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 transition-colors">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                    Crear Nueva Tarea
                </a>
                <a href="@Url.Action("Index", "Queue")" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 transition-colors">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                    </svg>
                    Ver Cola
                </a>
            </div>
        </div>
    </div>

    <!-- Alert Messages -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-50 border border-red-200 rounded-md p-4">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm text-red-800">@TempData["ErrorMessage"]</p>
                </div>
            </div>
        </div>
    }

    <!-- Tasks Table -->
    <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Lista de Tareas</h3>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Título</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Descripción</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Prioridad</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var item in Model)
                    {
                        <tr class="hover:bg-gray-50">
                            <td class="px-4 py-4 text-sm font-medium text-gray-900">
                                <div class="max-w-xs">
                                    <div class="truncate" title="@item.Title">@item.Title</div>
                                </div>
                            </td>
                            <td class="px-4 py-4 text-sm text-gray-500">
                                <div class="max-w-xs">
                                    @if (!string.IsNullOrEmpty(item.Description))
                                    {
                                        if (item.Description.Length > 60)
                                        {
                                            <div class="truncate" title="@item.Description">@item.Description.Substring(0, 60)...</div>
                                        }
                                        else
                                        {
                                            <div>@item.Description</div>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-gray-400">Sin descripción</span>
                                    }
                                </div>
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap">
                                <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @(item.Priority == "Alta" ? "bg-red-100 text-red-800" : item.Priority == "Media" ? "bg-yellow-100 text-yellow-800" : "bg-gray-100 text-gray-800")">
                                    @item.Priority
                                </span>
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap">
                                <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @(item.Status == "Pendiente" ? "bg-yellow-100 text-yellow-800" : item.Status == "En Proceso" ? "bg-blue-100 text-blue-800" : item.Status == "Finalizada" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                    @item.Status
                                </span>
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap text-sm font-medium">
                                <div class="flex flex-wrap gap-1">
                                    <a href="@Url.Action("Details", "Tasks", new { id = item.TaskId })" 
                                       class="inline-flex items-center px-2 py-1 text-xs bg-blue-50 text-blue-700 rounded hover:bg-blue-100 transition-colors">
                                        Ver
                                    </a>
                                    
                                    @if (item.Status != "En Proceso" && item.Status != "Finalizada")
                                    {
                                        <a href="@Url.Action("Edit", "Tasks", new { id = item.TaskId })" 
                                           class="inline-flex items-center px-2 py-1 text-xs bg-yellow-50 text-yellow-700 rounded hover:bg-yellow-100 transition-colors">
                                            Editar
                                        </a>
                                    }
                                    
                                    @if (item.Status == "Pendiente")
                                    {
                                        <button class="inline-flex items-center px-2 py-1 text-xs bg-green-50 text-green-700 rounded hover:bg-green-100 transition-colors enqueue-task" 
                                                data-task-id="@item.TaskId">
                                            Encolar
                                        </button>
                                    }
                                    
                                    @if (item.Status != "En Proceso" && item.Status != "Finalizada")
                                    {
                                        <a href="@Url.Action("Delete", "Tasks", new { id = item.TaskId })" 
                                           class="inline-flex items-center px-2 py-1 text-xs bg-red-50 text-red-700 rounded hover:bg-red-100 transition-colors"
                                           onclick="return confirm('¿Está seguro de que desea eliminar esta tarea?')">
                                            Eliminar
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var token = $('input[name="__RequestVerificationToken"]').val();
            
            // Agrega tareas pendientes a la cola de procesamiento
            $('.enqueue-task').click(function () {
                var taskId = $(this).data('task-id');
                
                $.ajax({
                    url: '@Url.Action("Enqueue", "Tasks")',
                    type: 'POST',
                    data: { 
                        id: taskId,
                        __RequestVerificationToken: token
                    },
                    dataType: 'json',
                    success: function (response) {
                        if (response.success) {
                            alert('Tarea agregada a la cola');
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Error al procesar la solicitud: ' + error);
                    }
                });
            });
        });
    </script>
}
